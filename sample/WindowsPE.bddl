struct DOSHeader {
  byte[] signature = "4D 5A";
  uint16 lastsize;
  uint16 nblocks;
  uint16 nreloc;
  uint16 hdrsize;
  uint16 minalloc;
  uint16 maxalloc;
  uint16 ss;
  uint16 sp;
  uint16 checksum;
  uint16 ip;
  uint16 cs;
  uint16 lfarlc;
  uint16 ovno;
  byte[8] reserved1;
  uint16 oemid;
  uint16 oeminfo;
  byte[20] reserved2;
  uint32 peoffset;
};

struct PEHeader {
  byte[] "50 45 00 00";
};

enum uint16 MachineType {
  Intel 386 = 0x14c;
  x64 = 0x8664;
  Arm LE = 0x1c0;
  Intel IA64 = 0x200;
};

struct COFFHeader {
  MachineType machine;
  uint16 sectionCount;
  uint32 timestamp;
  uint32 symbolTableOffset;
  uint32 symbolCount;
  uint16 optHeaderSize;
  uint16 characteristics;
};

struct DataDirectory {
  uint32 addr;
  uint32 size;
};

struct PEOptionalHeader {
  uint16 signature;
  uint8 majorLinkerVersion;
  uint8 minorLinkerVersion;
  uint32 codelen;
  ...
  long rvaCount;
  DataDirectory[rvaCount] directory;
};

DosHeader doshdr;
->doshdr.peoffset byte[] dosprogram;
PEHeader pehdr;
COFFHeader coffhdr;
PEOptionalHeader opthdr;
